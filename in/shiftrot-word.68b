/ ; ************************************************* /
/ ; *** ShiftRot.68                               *** /
/ ; *** Tests instructions for shifting and       *** /
/ ; *** rotating in Sim68k                        *** /
/ ; *** Tests LSL, LSR, ROL, ROR                  *** /
/ ; *** Also uses BRA, MOVE, DSP, DSR and HLT     *** /
/ ; ************************************************* /
/  /
/ ;    Assembly Language       OpCode  Oper1   Oper2  /
/ ;                           MSB LSB MSB LSB MSB LSB /
/ ;-------------------------------------------------- /
/ ; Branch to the first instruction /
/ BRA.W @Main             ; / $92 $60 $00 $0C
/  /
/ ; Declarations /
/ DEF.L @Const1, #$F0F0F0F0 ; / $F0 $F0 $F0 $F0
/ DEF.L @Const2, #$0F0F0F0F ; / $0F $0F $0F $0F
/  /
/ ; Main program /
/ LABEL @Main             ; /
/  /
/ ; Test LSL and LSR (word) /
/    MOVE.L @Const1, D0   ; / $C5 $60 $00 $04
/    MOVE.L @Const2, D1   ; / $C5 $61 $00 $08
/    LSL.W #$3, D0        ; / $62 $30
/ diff /
/    DSP.L D0             ; / $EC $00
/    LSR.W #$3, D0        ; / $6A $30
/ diff /
/    DSP.L D0             ; / $EC $00
/    DSR.B                ; / $F0 $00
/    LSR.W #$3, D1        ; / $6A $31
/    DSP.L D1             ; / $EC $10
/    DSR.B                ; / $F0 $00
/    LSL.W #$3, D1        ; / $62 $31
/    DSP.L D1             ; / $EC $10
/  /
/ ; Test ROL and ROR (word) /
/    MOVE.L @Const1, D0   ; / $C5 $60 $00 $04
/    MOVE.L @Const2, D1   ; / $C5 $61 $00 $08
/    ROL.W #$3, D0        ; / $72 $30
/ diff /
/    DSP.L D0             ; / $EC $00
/    ROR.W #$3, D0        ; / $7A $30
/ diff /
/    DSP.L D0             ; / $EC $00
/    DSR.B                ; / $F0 $00
/    ROR.W #$3, D1        ; / $7A $31
/ diff /
/    DSP.L D1             ; / $EC $10
/    DSR.B                ; / $F0 $00
/    ROL.W #$3, D1        ; / $72 $31
/ diff /
/    DSP.L D1             ; / $EC $10
/  /
/    HLT.B                ; / $F8 $00